package Game;

/**
 * The Game.Map class represents a game map with different levels.
 * Each level has a predefined 2D array representing the scene.
 */
public class Map {
    private int[][] scene;

    /**
     * Constructs a new Game.Map for the specified level.
     * @param level                     The level of the map to be loaded
     * @throws IllegalArgumentException If the specified level is invalid
     */
    public Map(int level) {
        switch (level) {
            case 1:
                this.scene = new int[][]{
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 0, 2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 0, 1},
                        {1, 2, 3, 2, 3, 0, 3, 0, 3, 2, 3, 0, 3, 0, 3, 0, 1},
                        {1, 2, 2, 2, 0, 2, 0, 0, 0, 2, 2, 2, 0, 2, 2, 0, 1},
                        {1, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 2, 3, 0, 3, 2, 1},
                        {1, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 1},
                        {1, 2, 3, 0, 3, 2, 3, 0, 3, 2, 3, 2, 3, 0, 3, 2, 1},
                        {1, 2, 2, 2, 0, 2, 2, 0, 1, 0, 0, 0, 2, 0, 2, 0, 1},
                        {1, 0, 3, 2, 3, 0, 3, 0, 3, 0, 3, 2, 3, 0, 3, 2, 1},
                        {1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1},
                        {1, 2, 3, 0, 3, 2, 3, 0, 3, 0, 3, 2, 3, 0, 3, 0, 1},
                        {1, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 1},
                        {1, 0, 3, 2, 3, 2, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 1},
                        {1, 0, 0, 2, 2, 2, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                };
                break;
            case 2:
                this.scene = new int[][]{
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 2, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 1},
                        {1, 0, 3, 2, 3, 0, 3, 2, 3, 0, 3, 0, 3, 0, 3, 2, 1},
                        {1, 0, 0, 2, 0, 2, 0, 0, 2, 2, 0, 2, 0, 2, 0, 0, 1},
                        {1, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 2, 1},
                        {1, 2, 0, 2, 0, 2, 2, 0, 0, 2, 0, 2, 0, 0, 2, 0, 1},
                        {1, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 2, 3, 0, 3, 0, 1},
                        {1, 2, 0, 2, 0, 2, 2, 0, 1, 0, 2, 0, 2, 0, 2, 0, 1},
                        {1, 0, 3, 0, 3, 2, 3, 0, 0, 0, 3, 2, 3, 0, 3, 2, 1},
                        {1, 2, 0, 2, 0, 0, 2, 2, 2, 0, 2, 0, 0, 2, 2, 2, 1},
                        {1, 0, 3, 0, 3, 2, 3, 2, 3, 0, 3, 0, 3, 2, 3, 0, 1},
                        {1, 2, 0, 0, 0, 2, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 1},
                        {1, 0, 3, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 0, 3, 0, 1},
                        {1, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                };
                break;
            case 3:
                this.scene = new int[][]{
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 1},
                        {1, 2, 3, 2, 3, 0, 3, 2, 3, 2, 3, 0, 3, 0, 3, 0, 1},
                        {1, 2, 2, 0, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2, 2, 2, 1},
                        {1, 0, 3, 2, 3, 0, 3, 0, 3, 0, 3, 2, 3, 0, 3, 2, 1},
                        {1, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2, 1},
                        {1, 2, 3, 2, 3, 2, 3, 0, 3, 2, 3, 2, 3, 0, 3, 2, 1},
                        {1, 2, 2, 0, 0, 2, 2, 0, 1, 0, 0, 0, 2, 0, 2, 0, 1},
                        {1, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 2, 3, 2, 3, 2, 1},
                        {1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 1},
                        {1, 2, 3, 3, 3, 2, 3, 0, 3, 2, 3, 0, 3, 0, 3, 0, 1},
                        {1, 2, 2, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 2, 1},
                        {1, 0, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 0, 1},
                        {1, 0, 0, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                };
                break;
            default:
                throw new IllegalArgumentException("Invalid level: " + level);
        }
    }

    /**
     * Returns the tile value at the specified coordinates.
     * @param x The x-coordinate of the tile.
     * @param y The y-coordinate of the tile.
     * @return  The value of the tile at the specified coordinates.
     */
    public int getTile(int x, int y) {
        return this.scene[y][x];
    }

    /**
     * Returns the entire scene as a 2D array.
     */
    public int[][] getScene() {
        return this.scene;
    }
}